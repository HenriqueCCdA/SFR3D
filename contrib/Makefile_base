#!/bin/sh
PATH_INCLUDE="include"
PATH_LIB="lib"
PRENAME=mfvCell
CC=gcc
OPENMP=no
OT=O3
DEBUG=no
MPI=no
METIS=no
#------------------gerando o nome do excutavel-------------
ifeq ($(CC),icc)
  ifeq ($(OPENMP),yes)
    COMPILER_NAME=intel_omp_$(OT)
  else
    COMPILER_NAME=intel_$(OT)
  endif
endif

ifeq ($(CC),gcc)
  COMPILER_NAME=gnu
# --- mpi
  ifeq ($(MPI),yes)
    COMPILER_NAME=gnu_mpi_$(OT)
# --- openmp
    ifeq ($(OPENMP),yes)
      COMPILER_NAME=gnu_mpi_omp_$(OT)
    endif
# --- sem mpi
  else
# --- openmp
    ifeq ($(OPENMP),yes)
      COMPILER_NAME=gnu_omp_$(OT)
		else
      COMPILER_NAME=gnu_$(OT)
		endif
  endif
endif

NAME=$(PRENAME)_$(COMPILER_NAME)
#-------------------Fontes--------------------------------
fontes = \
src/Assbly.c\
src/Adjcency.c\
src/Bicgstab.c\
src/CellCombustion.c\
src/CellDif.c\
src/CellEnergy.c\
src/CellLib.c\
src/CellLoop.c\
src/CellLoopInc.c\
src/CellPres.c\
src/CellSimple.c\
src/CellSimpleExp.c\
src/CellTrans.c\
src/Cg.c\
src/Combustion.c\
src/Coo.c\
src/Csr.c\
src/Datastruct.c\
src/Debug.c\
src/Diffusion.c\
src/Edo.c\
src/EllPack.c\
src/ElmIncid.c\
src/Energy.c\
src/Faces.c\
src/File.c\
src/Gauss.c\
src/Graph.c\
src/HccaBlas.c\
src/HccaOpenMp.c\
src/HccaSort.c\
src/Iters.c\
src/Jacobi.c\
src/Loads.c\
src/Main.c\
src/Media.c\
src/Memoria.c\
src/Numeq.c\
src/NunInt.c\
src/ParallelMpi.c\
src/PartMesh.c\
src/PreCond.c\
src/Prime.c\
src/Print.c\
src/Properties.c\
src/Random.c\
src/Rcm.c\
src/Reaction.c\
src/ReadFile.c\
src/Reord.c\
src/Residual.c\
src/SaveLoad.c\
src/Simple.c\
src/Solv.c\
src/Suelex.c\
src/Test.c\
src/Time.c\
src/TimeInterpol.c\
src/Transient.c\
src/Transport.c\
src/Turbulence.c\
src/Vtk.c\
src/WriteCsv.c\
src/WriteLog.c\
src/WriteMtx.c\
src/WriteVtk.c
#-------------------Flags necessarios--------------------------------
#NFLAGS=-I$(PATH_INCLUDE) -L$(PATH_LIB) -D_MMIO_
NFLAGS=-I$(PATH_INCLUDE) -L$(PATH_LIB)
#LDFLAGS=-lmmio
#--------------------compiladores------------------------------------
# intel ifort
ifeq ($(CC),icc)
  LDFLAGS +=
  OFLAGS  += -ansi -std=c99
  ifeq ($(OPENMP),yes)
    OFLAGS  += -openmp
  endif
endif
# gnu gcc
ifeq ($(CC),gcc)
  LDFLAGS +=  -lm -static
  #OFLAGS  +=  -Wall -ansi -std=c99 -pedantic-errors -pedantic\
  #             -fopt-info-optimized-missed=logOpt.txt -mtune=native
  OFLAGS  += -std=c99
  ifeq ($(METIS),yes)
    LDFLAGS += -lmetis-x86_64
    OFLAGS  += -D_METIS_
  endif
  ifeq ($(OPENMP),yes)
    OFLAGS  += -fopenmp
  endif
  ifeq ($(MPI),yes)
    OFLAGS  +=  -D_MPICH_
    CC=mpicc -cc=gcc
  endif
endif
#--------------------------------------------------------------------
#---------------------------Debug------------------------------------
ifeq ($(DEBUG),yes)
  OFLAGS += -g -$(OT)
else
  OFLAGS += -$(OT)
endif
#--------------------------------------------------------------------
CFLAGS= $(NFLAGS) $(OFLAGS)


.SUFFIXES:
.SUFFIXES: .c .h .o
OBJS= $(fontes:%.c=%.o)
build:	$(OBJS)
	ls bin || mkdir -p bin
	$(CC) $(CFLAGS) $(OBJS) -o bin/$(NAME)  $(LDFLAGS)

tags:
	ctags -R src/*.c include/*.h

.PHONY: cleantags
cleantags:
	@rm -fv tags

.PHONY: clean
clean:
	@rm -fv src/*.o
#	@rm -fv ../src/*.o
	@rm -fv bin/$(NAME)

.PHONY: cleanall
cleanall:
	@rm -fv tags
	@rm -fv src/*.o
	@rm -fv src/*.swp
#	@rm -fv ../src/*.o
	@rm -fv bin/$(NAME)


.PHONY: help
help:
	@echo "Autor :$(AUTHOR)                              "
	@echo "Makefile para prepar para sitemas linux.      "
	@echo -e "\E[7;32mOpcoes:\E[1;0m                      "
	@echo "build         - compila o prepar              "
	@echo "build_modules - gera os modulos               "
	@echo "tags          - gera os tags                  "
	@echo "cleantags     - limpa os tags                 "
	@echo "clean         - limpa os obj, bin e mod       "
	@echo "cleaall       - limpa tudo obj,bin,mod e tags "

# DO NOT DELETE

# DO NOT DELETE
